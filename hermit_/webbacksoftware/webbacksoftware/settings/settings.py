"""
Django settings for webbacksoftware project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
import sys
sys.path.insert(0,os.path.join(BASE_DIR,'apps'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'q2=_p+*%9zb0)qnefv_)08is+nny7&@cq_d@h7i^9oa-vo$a3q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user.apps.UserConfig',
    'areas.apps.AreasConfig',
    'rest_framework',
    'ckeditor',
    'ckeditor_uploader',
    'corsheaders',
    'rest_framework.authtoken',
    'libraries.apps.LibrariesConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'webbacksoftware.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'webbacksoftware.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME':'groupwork',
        'HOST':'192.168.211.139',
        'USER':'hermit',
        'PASSWORD':'shu18291124520',
        'PORT':'3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


CACHES={
    "default":{
        "BACKEND":"django_redis.cache.RedisCache",
        "LOCATION":"redis://127.0.0.1:6379/1",
        "OPTIONS":{
            "CLIENT_CLASS":'django_redis.client.DefaultClient',
        }
    },
    "session": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/4",
        "OPTIONS": {
            "CLIENT_CLASS": 'django_redis.client.DefaultClient',
        }
    },
    "valid": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/5",
        "OPTIONS": {
            "CLIENT_CLASS": 'django_redis.client.DefaultClient',
        }
    }
}

CORS_ORIGIN_WHITELIST=[
    'http://127.0.0.1:8080'
]
# 正则配置:
# CORS_ORIGIN_REGEX_WHITELIST =(r'^(https?://)?（\w+\.)?jim\.com $',)
# 或者直接允许所有主机跨域
CORS_ORIGIN_ALLOW_ALL = True

SESSION_ENGINE="django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS="session"

REST_FRAMEWORK={
    # 'EXPECTION_HANDLER':'shanghuishop.utils.exception_handler',
    'DEFAULT_AUTHENTICATION_CLASSES':(
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',
    # )
}


import datetime
JWT_AUTH={
    # 'JWT_EXPIRATION_DELTA':datetime.timedelta(seconds=30),
    'JWT_EXPIRATION_DELTA':datetime.timedelta(days=1),
    # 'JWT_RESPONSE_PAYLOAD_HANDLER':'user.utils.jwt_response_username_userid_token',
    # 'JWT_RESPONSE_PAYLOAD_HANDLER':'libraries.utils.jwt_response_username_userid_token',
    'JWT_RESPONSE_PAYLOAD_HANDLER':'webbacksoftware.utils.utils.jwt_response_username_userid_token',
}



AUTHENTICATION_BACKENDS=[
    'webbacksoftware.utils.utils.UserPhoneEmailAuthBackend',
    # 'user.utils.UserPhoneEmailAuthBackend',
    # 'libraries.utils.LibUserPhoneAuthBackend',
    'django.contrib.auth.backends.ModelBackend'
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
AUTH_USER_MODEL='user.User'



DEFAULT_FILE_STORAGE='webbacksoftware.utils.fdfs.fdfs_storage.FastdfsStorageClass'
FDFS_URL='http://127.0.0.1:8888/'
FDFS_CLIENT_CONFIG=os.path.join(BASE_DIR,'utils/fdfs/client.conf')
# AUTH_USER_MODEL='code_image.User'
# 邮件服务配置文件
EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_SSL = True
# 邮箱服务
EMAIL_HOST = 'smtp.qq.com'
# 端口号
EMAIL_PORT = 465
# 账号
EMAIL_HOST_USER = '921393289@qq.com'
# 授权秘钥 密钥要在QQ邮箱内开启IMAP/SMTP服务会获得
EMAIL_HOST_PASSWORD = 'axdcwspekuinbfig'
# 发件人
EMAIL_FROM='<921393289@qq.com>'

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',  # 工具条功能
        'height': 300,  # 编辑器高度
        'width': 800,  # 编辑器宽
    },
}
CKEDITOR_UPLOAD_PATH=''

LOG_PATH='logs'

LOGGING = {
    # 规定只能这样写
    'version': 1,
    # True表示禁用loggers
    'disable_existing_loggers': False,
    # 指定文件写入的格式——这里写了两个不同的格式，方便在后面不同情况需要的时候使用
    'formatters': {
        'default': {
            'format': '%(levelname)s %(filename)s %(lineno)d %(message)s'
        },
    },
    'handlers': {
        'code_handler': {
            'level': 'DEBUG',
            # 日志文件指定为多大(5M)， 超过大小(5M)重新命名，然后写新的日志文件
            'class': 'logging.handlers.RotatingFileHandler',
            'maxBytes': 1024 * 1024,
            # 储存到的文件地址
            'filename': '%s/code_log.txt' % LOG_PATH,
            'formatter': 'default'
        },
        'users_handler': {

            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'maxBytes':  1024 * 1024,
            'filename': '%s/users_log.txt' % LOG_PATH,
            'formatter': 'default'
        },
        'auths_handler': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'maxBytes':  1024 * 1024,
            'filename': '%s/auths_log.txt' % LOG_PATH,
            'formatter': 'default'
        }
    },
    'loggers': {
        'code': {
            # 主要记录验证码信息
            'handlers': ['code_handler'],
            'level': 'INFO',
            'propagate': True,
        },
        'users': {
            # 用户信息，注册登录及其他
            'handlers': ['users_handler'],
            'level': 'INFO',
            'propagate': True,
        },
        'auths': {
            'handlers': ['auths_handler'],
            'level': 'INFO',
            'propagate': True,
        }
    },
}

